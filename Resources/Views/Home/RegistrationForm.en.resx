<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Title" xml:space="preserve">
    <value>Form Vendor Registration - </value>
    <comment/>
  </data>
  <data name="Subtitle" xml:space="preserve">
    <value>Form Vendor Registration</value>
    <comment/>
  </data>
  <data name="OrgLevel" xml:space="preserve">
    <value>Organization Levels</value>
    <comment/>
  </data>
  <data name="Company" xml:space="preserve">
    <value>Company (Primary)</value>
    <comment/>
  </data>
  <data name="VerifCompany" xml:space="preserve">
    <value>(If have transaction with more than one company, please tick to add another company code and Purchase Org.)</value>
    <comment/>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>Currency</value>
    <comment/>
  </data>
  <data name="BasicData" xml:space="preserve">
    <value>Basic Data</value>
    <comment/>
  </data>
  <data name="TitleDB" xml:space="preserve">
    <value>Title</value>
    <comment/>
  </data>
  <data name="NameVendor" xml:space="preserve">
    <value>Name Vendor</value>
    <comment/>
  </data>
  <data name="CP" xml:space="preserve">
    <value>Contact Person</value>
    <comment/>
  </data>
  <data name="StreetHouse" xml:space="preserve">
    <value>Street House (Max. 60 characters)</value>
    <comment/>
  </data>
  <data name="Street4" xml:space="preserve">
    <value>Street 4 (additional - max 40 characters)</value>
    <comment/>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
    <comment/>
  </data>
  <data name="PostCode" xml:space="preserve">
    <value>Postal Code</value>
    <comment/>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
    <comment/>
  </data>
  <data name="Tel" xml:space="preserve">
    <value>Telephone (Max 20 characters)</value>
    <comment/>
  </data>
  <data name="Fax" xml:space="preserve">
    <value>Fax (Max 20 characters)</value>
    <comment/>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email (Max 132 characters)</value>
    <comment/>
  </data>
  <data name="TaxCat" xml:space="preserve">
    <value>Tax Categories</value>
    <comment/>
  </data>
  <data name="ServiceCat" xml:space="preserve">
    <value>Services Category</value>
    <comment/>
  </data>
  <data name="WithholdingType" xml:space="preserve">
    <value>Withholding Tax Type</value>
    <comment/>
  </data>
  <data name="WithholdingCode" xml:space="preserve">
    <value>Withholding Tax Code</value>
    <comment/>
  </data>
  <data name="TaxNumType" xml:space="preserve">
    <value>Tax Number Type</value>
    <comment/>
  </data>
  <data name="NPWP" xml:space="preserve">
    <value>VAT.Reg.No.</value>
    <comment/>
  </data>
  <data name="KTP" xml:space="preserve">
    <value>ID Card No.</value>
    <comment/>
  </data>
  <data name="PKP" xml:space="preserve">
    <value>PKP Confirmation Letter Number</value>
    <comment/>
  </data>
  <data name="LocalBankAcc" xml:space="preserve">
    <value>Local Bank Account</value>
    <comment/>
  </data>
  <data name="BankName" xml:space="preserve">
    <value>Bank Name</value>
    <comment/>
  </data>
  <data name="BankKey" xml:space="preserve">
    <value>Bank Key</value>
    <comment/>
  </data>
  <data name="SwiftCode" xml:space="preserve">
    <value>Swift Code</value>
    <comment/>
  </data>
  <data name="BankAcc" xml:space="preserve">
    <value>Bank Account</value>
    <comment/>
  </data>
  <data name="AccHolder" xml:space="preserve">
    <value>Account Holder</value>
    <comment/>
  </data>
  <data name="ForeignBankAcc" xml:space="preserve">
    <value>Foreign Bank Account</value>
    <comment/>
  </data>
  <data name="CountryofOrigin" xml:space="preserve">
    <value>Country of Origin</value>
    <comment/>
  </data>
  <data name="ReferenceCorr" xml:space="preserve">
    <value>Reference (correspondent bank)</value>
    <comment/>
  </data>
  <data name="ReferenceCountry" xml:space="preserve">
    <value>Reference Country of Origin</value>
    <comment/>
  </data>
  <data name="AccAssignment" xml:space="preserve">
    <value>Account Assignment</value>
    <comment/>
  </data>
  <data name="PIC" xml:space="preserve">
    <value>Initial PIC Vendor</value>
    <comment/>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>Upload</value>
    <comment/>
  </data>
  <data name="IdCard" xml:space="preserve">
    <value>ID Card / Company ID</value>
    <comment/>
  </data>
  <data name="ChooseFile" xml:space="preserve">
    <value>Choose file</value>
    <comment/>
  </data>
  <data name="NPWPUpload" xml:space="preserve">
    <value>Tax Identification Number</value>
    <comment/>
  </data>
  <data name="Sppkp" xml:space="preserve">
    <value>SPPKP / SPNPKP / PDKB</value>
    <comment/>
  </data>
  <data name="VendorStatement" xml:space="preserve">
    <value>Vendor Statement</value>
    <comment/>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Send</value>
    <comment/>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
    <comment/>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
    <comment/>
  </data>
  <data name="SearchTerm" xml:space="preserve">
    <value>Search Term</value>
    <comment/>
  </data>
  <data name="TitleRevision" xml:space="preserve">
    <value>Form Vendor Revision - </value>
    <comment/>
  </data>
  <data name="SubtitleRevision" xml:space="preserve">
    <value>Form Vendor Revision</value>
    <comment/>
  </data>
  <data name="ValidNote" xml:space="preserve">
    <value>Note is required</value>
    <comment/>
  </data>
  <data name="ValidSppkp" xml:space="preserve">
    <value>PKP Confirmation Letter Number is required</value>
    <comment/>
  </data>
  <data name="ValidKtp" xml:space="preserve">
    <value>ID Card No. is required</value>
    <comment/>
  </data>
</root>