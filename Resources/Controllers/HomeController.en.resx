<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Title" xml:space="preserve">
    <value>Welcome to PT INDESSO</value>
    <comment/>
  </data>
  <data name="Subtitle" xml:space="preserve">
    <value>Please read first the Terms of Invoice Exchange and Payment Procedures of PT INDESSO</value>
    <comment/>
  </data>
  <data name="Term1" xml:space="preserve">
    <value>REQUIREMENTS AND BILLING INVOICE STRUCTURE:</value>
    <comment/>
  </data>
  <data name="TermNo1" xml:space="preserve">
    <value>Receipt Exchange PT Indesso - 2 (two) copies. Invoice exchange receipt is valid for 1 (one) invoice.</value>
    <comment/>
  </data>
  <data name="TermNo2" xml:space="preserve">
    <value>Original Stamped Invoice (Bank account details must be included in the invoice)</value>
    <comment/>
  </data>
  <data name="TermNo3" xml:space="preserve">
    <value>Electronic Tax Invoice</value>
    <comment/>
  </data>
  <data name="TermNo4" xml:space="preserve">
    <value>Travel Document/News</value>
    <comment/>
  </data>
  <data name="TermNo5" xml:space="preserve">
    <value>Purchase Order (PO)</value>
    <comment/>
  </data>
  <data name="TermNo6" xml:space="preserve">
    <value>Goods Receipt report</value>
    <comment/>
  </data>
  <data name="Term2" xml:space="preserve">
    <value>INVOICE EXCHANGE SCHEDULE : Tuesday and Thursday (9am - 4pm)</value>
    <comment/>
  </data>
  <data name="Term3" xml:space="preserve">
    <value>PAYMENT SCHEDULE:</value>
    <comment/>
  </data>
  <data name="TermA" xml:space="preserve">
    <value>Indesso Tanah Abang: Friday, week 1 and week 3</value>
    <comment/>
  </data>
  <data name="TermB" xml:space="preserve">
    <value>Indesso Cileungsi and Purwokerto: Every Friday, except Friday at the last week</value>
    <comment/>
  </data>
  <data name="Important" xml:space="preserve">
    <value>IMPORTANT :</value>
    <comment/>
  </data>
  <data name="Poin1" xml:space="preserve">
    <value>Vendors must meet the mandatory requirements above, both for invoices sent directly or bills sent via expedition</value>
    <comment/>
  </data>
  <data name="Poin2" xml:space="preserve">
    <value>Make sure the account registered in the PT Indesso system is a valid &amp; current account</value>
    <comment/>
  </data>
  <data name="Poin3" xml:space="preserve">
    <value>Make sure the account listed on the invoice = the account registered in the PT Indesso system</value>
    <comment/>
  </data>
  <data name="Poin4" xml:space="preserve">
    <value>PT Indesso must to return all documents if the above mandatory requirements have not been met</value>
    <comment/>
  </data>
  <data name="Poin5" xml:space="preserve">
    <value>PT Indesso must to withhold income tax on invoices (if affected by income tax, in accordance with the Indonesian state tax law)</value>
    <comment/>
  </data>
  <data name="Poin6" xml:space="preserve">
    <value>Information about billing status updates can be found on the website: tufol.indesso.com</value>
    <comment/>
  </data>
  <data name="Poin7" xml:space="preserve">
    <value>Exchange invoices sent based on the address printed on the PT Indesso Purchase Order</value>
    <comment/>
  </data>
  <data name="Poin8" xml:space="preserve">
    <value>Proof of withholding income tax can be collected on the 3rd Friday of the following month, location based on invoice exchange:</value>
    <comment/>
  </data>
  <data name="Poin8a" xml:space="preserve">
    <value>For Indesso Tanah Abang and Cileungsi (email to Idh@indesso.com)</value>
    <comment/>
  </data>
  <data name="Poin8b" xml:space="preserve">
    <value>For Indesso Purwokerto (email to Km@indesso.com &amp; Ind@indesso.com)</value>
    <comment/>
  </data>
  <data name="Poin9" xml:space="preserve">
    <value>Payment due dates are:</value>
    <comment/>
  </data>
  <data name="Poin9a" xml:space="preserve">
    <value>Date of approved document status + TOP vendor + PT Indesso's payment schedule</value>
    <comment/>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
    <comment/>
  </data>
  <data name="Or" xml:space="preserve">
    <value>Or</value>
    <comment/>
  </data>
  <data name="CreateAcc" xml:space="preserve">
    <value>Create an Account</value>
    <comment/>
  </data>
  <data name="Dashboard" xml:space="preserve">
    <value>Dashboard</value>
    <comment/>
  </data>
  <data name="InvalidPassword" xml:space="preserve">
    <value>Invalid Password!</value>
    <comment/>
  </data>
  <data name="InvalidUser" xml:space="preserve">
    <value>Invalid User!</value>
    <comment/>
  </data>
  <data name="RegistrationSuccess" xml:space="preserve">
    <value>Vendor Registration Success!</value>
    <comment/>
  </data>
  <data name="FailedToSave" xml:space="preserve">
    <value>Failed to send data</value>
    <comment/>
  </data>
  <data name="PasswordMustBeSame" xml:space="preserve">
    <value>Password Must Be same!</value>
    <comment/>
  </data>
  <data name="InvalidUser2" xml:space="preserve">
    <value>Invalid User!</value>
    <comment/>
  </data>
</root>